INSTALL

configure, build and install R-2.0.0 (2004-10-04) with

	./configure --with-blas='-framework vecLib' --with-lapack --with-aqua 
	make
	sudo make install
	
"--with-aqua" is needed also for this Cocoa version. The R.app will init R with argument "--gui=cocoa"

Once you have the R.framework installed in /Library/Frameworks, you can build R.app

 Building R.app
================

This project has been produced with XCode 1.5 - update your XCode if necessary.
The project can be built by selecting "R" target and "Build" inside the XCode GUI.

To build the project from the command line in Mac-GUI directory use:
	xcodebuild -target R -buildstyle Deployment

To build the R for Mac OS X Faq use either
	xcodebuild -target Docs
or manually in docs folder
	makeinfo -D UseExternalXrefs --html --force --no-split RMacOSX-FAQ.texi
	
In any case the resulting html FAQ file can be found in Mac-GUI/docs directory.

NOTE:
To run R.app from inside the XCode debugger, you have to setup the R_HOME 
environment variable. Proceed as follows:
* Select the "R" executable (in Groups & Files view: R -> Executables -> R)
* choose "Info" (shortcut: <Cmd><I>)
* Click the "Arguments" tab, in the lower list (Variables ..) use (+) and set 
	R_HOME  
	to   
	/Library/Frameworks/R.framework/Resources


 Building R.app against R-2.1.x (r-devel)
==========================================
In R-2.1.x two new headers have been introduced to support GUIs and embedding.
In particular, ptr_Raqua_Edit has been replaced by a generic ptr_R_EditFile. This
means that ptr_Raqua_edit no longer exists in 2.1.x and viceversa, old (2.0.0) R.app
won't be able to find the symbol ptr_R_EditFile.
To build R.app against R.framework 2_1_x or higher define the constant "BUILD_FOR_R_2_1_x"


--
 Last update: 2004-10-22
